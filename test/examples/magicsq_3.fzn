array [1..9] of var 1..9: a :: output_array([1..3, 1..3]);
constraint int_lin_eq([1, 1, 1], [a[1], a[2], a[3]], 15);
constraint int_lin_eq([1, 1, 1], [a[1], a[4], a[7]], 15);
constraint int_lin_eq([1, 1, 1], [a[1], a[5], a[9]], 15);
constraint int_lin_eq([1, 1, 1], [a[2], a[5], a[8]], 15);
constraint int_lin_eq([1, 1, 1], [a[3], a[5], a[7]], 15);
constraint int_lin_eq([1, 1, 1], [a[3], a[6], a[9]], 15);
constraint int_lin_eq([1, 1, 1], [a[4], a[5], a[6]], 15);
constraint int_lin_eq([1, 1, 1], [a[7], a[8], a[9]], 15);
constraint int_ne(a[1], a[2]);
constraint int_ne(a[1], a[3]);
constraint int_ne(a[1], a[4]);
constraint int_ne(a[1], a[5]);
constraint int_ne(a[1], a[6]);
constraint int_ne(a[1], a[7]);
constraint int_ne(a[1], a[8]);
constraint int_ne(a[1], a[9]);
constraint int_ne(a[2], a[3]);
constraint int_ne(a[2], a[4]);
constraint int_ne(a[2], a[5]);
constraint int_ne(a[2], a[6]);
constraint int_ne(a[2], a[7]);
constraint int_ne(a[2], a[8]);
constraint int_ne(a[2], a[9]);
constraint int_ne(a[3], a[4]);
constraint int_ne(a[3], a[5]);
constraint int_ne(a[3], a[6]);
constraint int_ne(a[3], a[7]);
constraint int_ne(a[3], a[8]);
constraint int_ne(a[3], a[9]);
constraint int_ne(a[4], a[5]);
constraint int_ne(a[4], a[6]);
constraint int_ne(a[4], a[7]);
constraint int_ne(a[4], a[8]);
constraint int_ne(a[4], a[9]);
constraint int_ne(a[5], a[6]);
constraint int_ne(a[5], a[7]);
constraint int_ne(a[5], a[8]);
constraint int_ne(a[5], a[9]);
constraint int_ne(a[6], a[7]);
constraint int_ne(a[6], a[8]);
constraint int_ne(a[6], a[9]);
constraint int_ne(a[7], a[8]);
constraint int_ne(a[7], a[9]);
constraint int_ne(a[8], a[9]);
solve satisfy;
