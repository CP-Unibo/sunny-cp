array [1..8] of var 1..8: q :: output_array([1..8]);
constraint int_lin_ne([1, -1], [q[1], q[2]], -1);
constraint int_lin_ne([1, -1], [q[1], q[2]], 1);
constraint int_lin_ne([1, -1], [q[1], q[3]], -2);
constraint int_lin_ne([1, -1], [q[1], q[3]], 2);
constraint int_lin_ne([1, -1], [q[1], q[4]], -3);
constraint int_lin_ne([1, -1], [q[1], q[4]], 3);
constraint int_lin_ne([1, -1], [q[1], q[5]], -4);
constraint int_lin_ne([1, -1], [q[1], q[5]], 4);
constraint int_lin_ne([1, -1], [q[1], q[6]], -5);
constraint int_lin_ne([1, -1], [q[1], q[6]], 5);
constraint int_lin_ne([1, -1], [q[1], q[7]], -6);
constraint int_lin_ne([1, -1], [q[1], q[7]], 6);
constraint int_lin_ne([1, -1], [q[1], q[8]], -7);
constraint int_lin_ne([1, -1], [q[1], q[8]], 7);
constraint int_lin_ne([1, -1], [q[2], q[3]], -1);
constraint int_lin_ne([1, -1], [q[2], q[3]], 1);
constraint int_lin_ne([1, -1], [q[2], q[4]], -2);
constraint int_lin_ne([1, -1], [q[2], q[4]], 2);
constraint int_lin_ne([1, -1], [q[2], q[5]], -3);
constraint int_lin_ne([1, -1], [q[2], q[5]], 3);
constraint int_lin_ne([1, -1], [q[2], q[6]], -4);
constraint int_lin_ne([1, -1], [q[2], q[6]], 4);
constraint int_lin_ne([1, -1], [q[2], q[7]], -5);
constraint int_lin_ne([1, -1], [q[2], q[7]], 5);
constraint int_lin_ne([1, -1], [q[2], q[8]], -6);
constraint int_lin_ne([1, -1], [q[2], q[8]], 6);
constraint int_lin_ne([1, -1], [q[3], q[4]], -1);
constraint int_lin_ne([1, -1], [q[3], q[4]], 1);
constraint int_lin_ne([1, -1], [q[3], q[5]], -2);
constraint int_lin_ne([1, -1], [q[3], q[5]], 2);
constraint int_lin_ne([1, -1], [q[3], q[6]], -3);
constraint int_lin_ne([1, -1], [q[3], q[6]], 3);
constraint int_lin_ne([1, -1], [q[3], q[7]], -4);
constraint int_lin_ne([1, -1], [q[3], q[7]], 4);
constraint int_lin_ne([1, -1], [q[3], q[8]], -5);
constraint int_lin_ne([1, -1], [q[3], q[8]], 5);
constraint int_lin_ne([1, -1], [q[4], q[5]], -1);
constraint int_lin_ne([1, -1], [q[4], q[5]], 1);
constraint int_lin_ne([1, -1], [q[4], q[6]], -2);
constraint int_lin_ne([1, -1], [q[4], q[6]], 2);
constraint int_lin_ne([1, -1], [q[4], q[7]], -3);
constraint int_lin_ne([1, -1], [q[4], q[7]], 3);
constraint int_lin_ne([1, -1], [q[4], q[8]], -4);
constraint int_lin_ne([1, -1], [q[4], q[8]], 4);
constraint int_lin_ne([1, -1], [q[5], q[6]], -1);
constraint int_lin_ne([1, -1], [q[5], q[6]], 1);
constraint int_lin_ne([1, -1], [q[5], q[7]], -2);
constraint int_lin_ne([1, -1], [q[5], q[7]], 2);
constraint int_lin_ne([1, -1], [q[5], q[8]], -3);
constraint int_lin_ne([1, -1], [q[5], q[8]], 3);
constraint int_lin_ne([1, -1], [q[6], q[7]], -1);
constraint int_lin_ne([1, -1], [q[6], q[7]], 1);
constraint int_lin_ne([1, -1], [q[6], q[8]], -2);
constraint int_lin_ne([1, -1], [q[6], q[8]], 2);
constraint int_lin_ne([1, -1], [q[7], q[8]], -1);
constraint int_lin_ne([1, -1], [q[7], q[8]], 1);
constraint int_ne(q[1], q[2]);
constraint int_ne(q[1], q[3]);
constraint int_ne(q[1], q[4]);
constraint int_ne(q[1], q[5]);
constraint int_ne(q[1], q[6]);
constraint int_ne(q[1], q[7]);
constraint int_ne(q[1], q[8]);
constraint int_ne(q[2], q[3]);
constraint int_ne(q[2], q[4]);
constraint int_ne(q[2], q[5]);
constraint int_ne(q[2], q[6]);
constraint int_ne(q[2], q[7]);
constraint int_ne(q[2], q[8]);
constraint int_ne(q[3], q[4]);
constraint int_ne(q[3], q[5]);
constraint int_ne(q[3], q[6]);
constraint int_ne(q[3], q[7]);
constraint int_ne(q[3], q[8]);
constraint int_ne(q[4], q[5]);
constraint int_ne(q[4], q[6]);
constraint int_ne(q[4], q[7]);
constraint int_ne(q[4], q[8]);
constraint int_ne(q[5], q[6]);
constraint int_ne(q[5], q[7]);
constraint int_ne(q[5], q[8]);
constraint int_ne(q[6], q[7]);
constraint int_ne(q[6], q[8]);
constraint int_ne(q[7], q[8]);
solve  :: int_search(q, first_fail, indomain_min, complete) satisfy;
