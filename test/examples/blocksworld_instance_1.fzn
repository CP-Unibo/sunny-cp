array [1..3] of int: final_loc = [2, 3, 0];
array [1..3] of int: initial_loc = [2, 0, 1];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00010 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00026 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00032 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00042 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00048 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00052 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
array [1..12] of var -3..3: on :: output_array([1..4, 1..3]);
constraint array_bool_and([BOOL____00007, BOOL____00006, BOOL____00001], BOOL____00008) :: defines_var(BOOL____00008);
constraint array_bool_and([BOOL____00017, BOOL____00011, BOOL____00016], BOOL____00018) :: defines_var(BOOL____00018);
constraint array_bool_and([BOOL____00021, BOOL____00027, BOOL____00026], BOOL____00028) :: defines_var(BOOL____00028);
constraint array_bool_and([BOOL____00037, BOOL____00036, BOOL____00031], BOOL____00038) :: defines_var(BOOL____00038);
constraint array_bool_and([BOOL____00047, BOOL____00041, BOOL____00046], BOOL____00048) :: defines_var(BOOL____00048);
constraint array_bool_and([BOOL____00051, BOOL____00057, BOOL____00056], BOOL____00058) :: defines_var(BOOL____00058);
constraint array_bool_and([BOOL____00067, BOOL____00066, BOOL____00061], BOOL____00068) :: defines_var(BOOL____00068);
constraint array_bool_and([BOOL____00077, BOOL____00071, BOOL____00076], BOOL____00078) :: defines_var(BOOL____00078);
constraint array_bool_and([BOOL____00081, BOOL____00087, BOOL____00086], BOOL____00088) :: defines_var(BOOL____00088);
constraint array_bool_and([BOOL____00009, BOOL____00004, BOOL____00003, BOOL____00002], BOOL____00010) :: defines_var(BOOL____00010);
constraint array_bool_and([BOOL____00019, BOOL____00014, BOOL____00013, BOOL____00012], BOOL____00020) :: defines_var(BOOL____00020);
constraint array_bool_and([BOOL____00029, BOOL____00024, BOOL____00023, BOOL____00022], BOOL____00030) :: defines_var(BOOL____00030);
constraint array_bool_and([BOOL____00039, BOOL____00034, BOOL____00033, BOOL____00032], BOOL____00040) :: defines_var(BOOL____00040);
constraint array_bool_and([BOOL____00049, BOOL____00044, BOOL____00043, BOOL____00042], BOOL____00050) :: defines_var(BOOL____00050);
constraint array_bool_and([BOOL____00059, BOOL____00054, BOOL____00053, BOOL____00052], BOOL____00060) :: defines_var(BOOL____00060);
constraint array_bool_and([BOOL____00069, BOOL____00064, BOOL____00063, BOOL____00062], BOOL____00070) :: defines_var(BOOL____00070);
constraint array_bool_and([BOOL____00079, BOOL____00074, BOOL____00073, BOOL____00072], BOOL____00080) :: defines_var(BOOL____00080);
constraint array_bool_and([BOOL____00089, BOOL____00084, BOOL____00083, BOOL____00082], BOOL____00090) :: defines_var(BOOL____00090);
constraint array_bool_or([BOOL____00008, BOOL____00005], BOOL____00009) :: defines_var(BOOL____00009);
constraint array_bool_or([BOOL____00018, BOOL____00015], BOOL____00019) :: defines_var(BOOL____00019);
constraint array_bool_or([BOOL____00028, BOOL____00025], BOOL____00029) :: defines_var(BOOL____00029);
constraint array_bool_or([BOOL____00038, BOOL____00035], BOOL____00039) :: defines_var(BOOL____00039);
constraint array_bool_or([BOOL____00048, BOOL____00045], BOOL____00049) :: defines_var(BOOL____00049);
constraint array_bool_or([BOOL____00058, BOOL____00055], BOOL____00059) :: defines_var(BOOL____00059);
constraint array_bool_or([BOOL____00068, BOOL____00065], BOOL____00069) :: defines_var(BOOL____00069);
constraint array_bool_or([BOOL____00078, BOOL____00075], BOOL____00079) :: defines_var(BOOL____00079);
constraint array_bool_or([BOOL____00088, BOOL____00085], BOOL____00089) :: defines_var(BOOL____00089);
constraint bool_le(BOOL____00001, BOOL____00010);
constraint bool_le(BOOL____00011, BOOL____00020);
constraint bool_le(BOOL____00021, BOOL____00030);
constraint bool_le(BOOL____00031, BOOL____00040);
constraint bool_le(BOOL____00041, BOOL____00050);
constraint bool_le(BOOL____00051, BOOL____00060);
constraint bool_le(BOOL____00061, BOOL____00070);
constraint bool_le(BOOL____00071, BOOL____00080);
constraint bool_le(BOOL____00081, BOOL____00090);
constraint int_eq(on[1], 2);
constraint int_eq(on[2], -2);
constraint int_eq(on[3], 1);
constraint int_eq(on[10], 2);
constraint int_eq(on[11], 3);
constraint int_eq(on[12], -3);
constraint int_lt_reif(on[4], 0, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_lt_reif(on[5], 0, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_lt_reif(on[6], 0, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_lt_reif(on[7], 0, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_lt_reif(on[8], 0, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_lt_reif(on[9], 0, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_lt_reif(on[10], 0, BOOL____00065) :: defines_var(BOOL____00065);
constraint int_lt_reif(on[11], 0, BOOL____00075) :: defines_var(BOOL____00075);
constraint int_lt_reif(on[12], 0, BOOL____00085) :: defines_var(BOOL____00085);
constraint int_ne(on[1], on[2]);
constraint int_ne(on[1], on[3]);
constraint int_ne(on[2], on[3]);
constraint int_ne(on[4], on[5]);
constraint int_ne(on[4], on[6]);
constraint int_ne(on[5], on[6]);
constraint int_ne(on[7], on[8]);
constraint int_ne(on[7], on[9]);
constraint int_ne(on[8], on[9]);
constraint int_ne(on[10], on[11]);
constraint int_ne(on[10], on[12]);
constraint int_ne(on[11], on[12]);
constraint int_ne_reif(on[1], 1, BOOL____00002) :: defines_var(BOOL____00002);
constraint int_ne_reif(on[1], 2, BOOL____00012) :: defines_var(BOOL____00012);
constraint int_ne_reif(on[1], 3, BOOL____00022) :: defines_var(BOOL____00022);
constraint int_ne_reif(on[1], on[4], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_ne_reif(on[1], on[5], BOOL____00016) :: defines_var(BOOL____00016);
constraint int_ne_reif(on[1], on[6], BOOL____00026) :: defines_var(BOOL____00026);
constraint int_ne_reif(on[2], 1, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_ne_reif(on[2], 2, BOOL____00013) :: defines_var(BOOL____00013);
constraint int_ne_reif(on[2], 3, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_ne_reif(on[2], on[4], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_ne_reif(on[2], on[5], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_ne_reif(on[2], on[6], BOOL____00027) :: defines_var(BOOL____00027);
constraint int_ne_reif(on[3], 1, BOOL____00004) :: defines_var(BOOL____00004);
constraint int_ne_reif(on[3], 2, BOOL____00014) :: defines_var(BOOL____00014);
constraint int_ne_reif(on[3], 3, BOOL____00024) :: defines_var(BOOL____00024);
constraint int_ne_reif(on[3], on[4], BOOL____00007) :: defines_var(BOOL____00007);
constraint int_ne_reif(on[3], on[5], BOOL____00017) :: defines_var(BOOL____00017);
constraint int_ne_reif(on[3], on[6], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_ne_reif(on[4], 1, BOOL____00032) :: defines_var(BOOL____00032);
constraint int_ne_reif(on[4], 2, BOOL____00042) :: defines_var(BOOL____00042);
constraint int_ne_reif(on[4], 3, BOOL____00052) :: defines_var(BOOL____00052);
constraint int_ne_reif(on[4], on[7], BOOL____00031) :: defines_var(BOOL____00031);
constraint int_ne_reif(on[4], on[8], BOOL____00046) :: defines_var(BOOL____00046);
constraint int_ne_reif(on[4], on[9], BOOL____00056) :: defines_var(BOOL____00056);
constraint int_ne_reif(on[5], 1, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_ne_reif(on[5], 2, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_ne_reif(on[5], 3, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_ne_reif(on[5], on[7], BOOL____00036) :: defines_var(BOOL____00036);
constraint int_ne_reif(on[5], on[8], BOOL____00041) :: defines_var(BOOL____00041);
constraint int_ne_reif(on[5], on[9], BOOL____00057) :: defines_var(BOOL____00057);
constraint int_ne_reif(on[6], 1, BOOL____00034) :: defines_var(BOOL____00034);
constraint int_ne_reif(on[6], 2, BOOL____00044) :: defines_var(BOOL____00044);
constraint int_ne_reif(on[6], 3, BOOL____00054) :: defines_var(BOOL____00054);
constraint int_ne_reif(on[6], on[7], BOOL____00037) :: defines_var(BOOL____00037);
constraint int_ne_reif(on[6], on[8], BOOL____00047) :: defines_var(BOOL____00047);
constraint int_ne_reif(on[6], on[9], BOOL____00051) :: defines_var(BOOL____00051);
constraint int_ne_reif(on[7], 1, BOOL____00062) :: defines_var(BOOL____00062);
constraint int_ne_reif(on[7], 2, BOOL____00072) :: defines_var(BOOL____00072);
constraint int_ne_reif(on[7], 3, BOOL____00082) :: defines_var(BOOL____00082);
constraint int_ne_reif(on[7], on[10], BOOL____00061) :: defines_var(BOOL____00061);
constraint int_ne_reif(on[7], on[11], BOOL____00076) :: defines_var(BOOL____00076);
constraint int_ne_reif(on[7], on[12], BOOL____00086) :: defines_var(BOOL____00086);
constraint int_ne_reif(on[8], 1, BOOL____00063) :: defines_var(BOOL____00063);
constraint int_ne_reif(on[8], 2, BOOL____00073) :: defines_var(BOOL____00073);
constraint int_ne_reif(on[8], 3, BOOL____00083) :: defines_var(BOOL____00083);
constraint int_ne_reif(on[8], on[10], BOOL____00066) :: defines_var(BOOL____00066);
constraint int_ne_reif(on[8], on[11], BOOL____00071) :: defines_var(BOOL____00071);
constraint int_ne_reif(on[8], on[12], BOOL____00087) :: defines_var(BOOL____00087);
constraint int_ne_reif(on[9], 1, BOOL____00064) :: defines_var(BOOL____00064);
constraint int_ne_reif(on[9], 2, BOOL____00074) :: defines_var(BOOL____00074);
constraint int_ne_reif(on[9], 3, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_ne_reif(on[9], on[10], BOOL____00067) :: defines_var(BOOL____00067);
constraint int_ne_reif(on[9], on[11], BOOL____00077) :: defines_var(BOOL____00077);
constraint int_ne_reif(on[9], on[12], BOOL____00081) :: defines_var(BOOL____00081);
constraint set_in(on[1], {-1, 2, 3});
constraint set_in(on[2], {-2, 1, 3});
constraint set_in(on[3], {-3, 1, 2});
constraint set_in(on[4], {-1, 2, 3});
constraint set_in(on[5], {-2, 1, 3});
constraint set_in(on[6], {-3, 1, 2});
constraint set_in(on[7], {-1, 2, 3});
constraint set_in(on[8], {-2, 1, 3});
constraint set_in(on[9], {-3, 1, 2});
constraint set_in(on[10], {-1, 2, 3});
constraint set_in(on[11], {-2, 1, 3});
constraint set_in(on[12], {-3, 1, 2});
solve  :: int_search([on[1], on[2], on[3], on[4], on[5], on[6], on[7], on[8], on[9], on[10], on[11], on[12]], first_fail, indomain_split, complete) satisfy;
