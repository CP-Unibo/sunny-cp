'''
Module for creating a default portfolio by automatically generating the 
src/pfolio_solvers.py file from the files .solv in this folder
'''

import os
import sys
import json
import psutil
from subprocess import PIPE

SUNNY_HOME = os.path.realpath(__file__).split('/')[:-2]
SUNNY_HOME = '/'.join(SUNNY_HOME)
pfolio_path = SUNNY_HOME + '/src/pfolio_solvers.py'
pfolio_file = open(pfolio_path, 'w')

preamble = "'''\nThis module is automatically generated by make_pfolio.py. " \
         + "Don't modify it!\n'''\n\n"
pfolio_file.write(preamble)

solvers_path = SUNNY_HOME + '/solvers/'
solver_files = [
  f for f in os.walk(solvers_path).__next__()[2] if f.endswith('.solv')
]
DEF_PFOLIO = {}
for solver_file in solver_files:
  versions = json.load(open(solvers_path + solver_file))['versions']
  for solver in versions:
    print('Adding solver', solver['name'])
    solv = solver_file[:solver_file.index('.solv')]
    DEF_PFOLIO[solver['id']] = {
      'solver': solv,
      'name': solver['name'], 
      'conv_opts': solver['conv_opts'], 
      'solv_opts': solver['solv_opts']
    }
    cmd = [
      'minizinc', '-c', '--solver', solv, '--output-to-stdout', '--no-output-ozn',
      solvers_path + 'constraint.mzn'
    ]
    proc = psutil.Popen(cmd, stdout = PIPE, stderr = PIPE)
    out, err = proc.communicate()
    if proc.returncode != 0:
      print(err)
      print('Error! Solver',solver,'not installed')
      sys.exit(1)
    for line in out.decode().split(';\n'):
      intro = 'X_INTRODUCED_0_ = '
      idx = line.find(intro)
      if idx >= 0:
        val = line[idx + len(intro):]
      elif 'constraint' in line:
        line = line.replace('X_INTRODUCED_0_', val)
        constraint = DEF_PFOLIO[solver['id']]['constraint'] = line
        break
pfolio_file.write('DEF_PFOLIO = ' + str(DEF_PFOLIO))
pfolio_file.write('\n\n')
