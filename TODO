- class RunningSolver:
    solver = solver_object (Solver has a field options = '')
    fzn = '' # Path FlatZinc
    state = '' # 'converting', 'solving', 'suspended'
    process = None # Popen(...)
    start_time = -1
    timeout = -1
    solution_time = -1
    solution = []
    obj_value = None
    
  solvers come oggetti di classe Solver
  RUNNING_SOLVERS + SUSPENDED_SOLVERS: dict(name, RunningSolver)
    
  --fzn-opt-<SOLVER_NAME> "<OPTIONS>"
  --fzn-opt-all "<OPTIONS>"  (def "-a" if COP, "" if CSP)
  -a == --opt-all "-a" (def set if COP, not set if CSP)
  -f == --opt-all "-f" (def not set)
  
- pre-solving + solving

- documentare

- testing (coverage?) 

- integrare installazione con mzn2feat (PB Makefile: var. d'ambiente)

- filtrare dataset, solvers, features x ridurre complessit√†